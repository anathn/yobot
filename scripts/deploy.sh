#!/usr/bin/env bash
# PURPOSE: Zips up virtualenv and project code, sends to AWS Lambda. (Updates existing function.)
#
# PREREQUISITES:
#   - activate the virtualenv for this project.
#   - get virtualenv in sync with requirements.txt file, i.e. `pip install -r requirements`
#   - create an AWS Lambda function. default name assumed in this script is "yobot" but,
#   you can also set
#   - set required environment variables. (see README and/or .env.)
#
# I've done my best to make the script fail fast and fail in loud/clear ways, so hopefully
# between that & the documentation you won't have too much trouble :)

set -e

YOBOT_AWSLAMBDA_FUNCTION="${YOBOT_AWSLAMBDA_FUNCTION:-yobot}"

if [ -z ${VIRTUAL_ENV+x} ]; then
    echo "Please activate your virtualenv and then run this script."
    exit 127
fi


# TODO(hangtwenty) update w/ bashism to get absolute path to this script so this cd always works
# and can always CD back into this exact dir
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
PROJECT_DIR="$DIR/.."

rm -i /tmp/yobot-lambda.zip || true

pip install --upgrade -r $PROJECT_DIR/requirements.txt

# copy all python files from the yobot directory. (recursive)
cd $PROJECT_DIR/yobot/
zip -r /tmp/yobot-lambda.zip .
echo "[.] Copied all Python from this directory into zipfile."

# as recommended here ...
# http://docs.aws.amazon.com/lambda/latest/dg/lambda-python-how-to-create-deployment-package.html
cd $VIRTUAL_ENV/lib/python2.7/site-packages/
zip -ur /tmp/yobot-lambda.zip *
echo "[.] Copied everything from virtualenv into zipfile."
cd $PROJECT_DIR

# now lastly overwrite the contents of "yobot_config_and_secrets.py" with values from
# environment variables, i.e. those defined in the ".env" file at the root of this repository.
WORK_DIR="a4cf47f1"
mkdir -p /tmp/$WORK_DIR/
cd /tmp/$WORK_DIR
cat >./yobot_config_and_secrets.py << EOL
# Autogenerated by "${DIR}/${BASH_SOURCE[0]}"
YOBOT_WEBHOOK_TOKEN='${YOBOT_WEBHOOK_TOKEN}'
YOBOT_SLASHCOMMAND_TOKEN='${YOBOT_SLASHCOMMAND_TOKEN}'
YOBOT_BOTUSER_NAME='${YOBOT_BOTUSER_NAME}'
YOBOT_BOTUSER_TOKEN='${YOBOT_BOTUSER_TOKEN}'
YOBOT_BROADCASTCHANNEL_NAME='${YOBOT_BROADCASTCHANNEL_NAME}'
YOBOT_DEBUG='${YOBOT_DEBUG}'
YOBOT_DEBUGUSER_NAME='${YOBOT_DEBUGUSER_NAME}'
EOL
zip -u /tmp/yobot-lambda.zip ./yobot_config_and_secrets.py
cd $PROJECT_DIR
rm /tmp/$WORK_DIR/yobot_config_and_secrets.py
echo "[.] Within the zipfile, overwrote the file ./yobot/yobot_config_and_secrets.py with values from environment variables."

echo "[.] Calling 'aws lambda update-function-code' ..."
aws lambda update-function-code --function-name "$YOBOT_AWSLAMBDA_FUNCTION" --zip fileb:///tmp/yobot-lambda.zip
